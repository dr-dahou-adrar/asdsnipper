{
	"Template de [ecrire msg]": {
		"scope": "algo",
		"prefix": "ecrire msg",
		"body": " Ecrire(\"${1:message}\");"
	},
	"Template de [ecrire variable]": {
		"scope": "algo",
		"prefix": "ecrire variable",
		"body": " Ecrire(${1:variable});"
		
	},
	"Template de [lire variable]": {
		"scope": "algo",
		"prefix": "lire variable",
		"body": " Lire(${1:variable});"
	},
	"Template de [pour]": {
		"scope": "algo",
		"prefix": "pour",
		"body": [
			"Pour ${1:compteur} De: ${2:début} A: ${3:fin} Pas: ${4:valeur} Faire",
			"\t${5:instructions;}",
			"FinPour"
		]
	},
	"Template de [repéter]": {
		"scope": "algo",
		"prefix": "repéter",
		"body": [
			"Repéter",
			"\t${1:instructions};",
			"Jusqu'a (${2:expression logique ou critère d'arrêt});"
		],
		"description":"boucle répéter"
	},
	"Template de [pour/décroissant]": {
		"scope": "algo",
		"prefix": "pour décroissant",
		"body": [
			"pour ${1:variable} décroissant de ${2:début} à ${3:fin} faire",
			"\t${4:instructions};",
			"fpour"
		]
	},
	"Template de [pour chaque]": {
		"scope": "algo",
		"prefix": "pour chaque",
		"body": [
			"pour chaque ${1:variable} dans ${2:ensemble} faire",
			"\t${3:instructions};",
			"fpour"
		]
	},
	"Template de [pour chaque/jusque]": {
		"scope": "algo",
		"prefix": "pour chaque jusque",
		"body": [
			"pour chaque ${1:variable} jusque ${2:condition} dans ${3:ensemble} faire",
			"    ${4:instructions;}",
			"fpour"
		]
	},
	"Template de [tant que]": {
		"scope": "algo",
		"prefix": "tant-que",
		"body": [
			"Tant que (${1:condition}) Faire",
			"\t${2:instructions};",
			"FinTantque"
		],
		"description":"boucle tant que"
	},
	"Template de [si]": {
		"scope": "algo",
		"prefix": "si-alors",
		"body": [
			"Si (${1:condition}) Alors",
			"\t${2:instructions};",
			"FinSi"
		]
	},
	"Template de [si/sinon]": {
		"scope": "algo",
		"prefix": "si-sinon",
		"body": [
			"Si (${1:condition}) Alors",
			"\t${2:instructions};",
			"Sinon",
			"\t${3:instructions};",
			"FinSi"
		]
	},
	"Template de [variables block]": {
		"scope": "algo",
		"prefix": "variables block",
		"body": [
			"Variables",
			"\t${1:var}: ${2|entier,chaîne,caractère,booléen,réel|};"
		],
		"description": "Ajouter une block de variables pour l'initialization"
	},

	"Template de [variable]": {
		"scope": "algo",
		"prefix": "variable",
		"body": "${1:var}: ${2|entier,chaîne,caractère,booléen,réel|};",
		"description": "Ajouter une seul variable"
	},

	"Template de [Tableau 1D]": {
		"scope": "algo",
		"prefix": "tab 1d",
		"body": "${1:Nom}: Tableau [1..${3:fin}] de ${4|entier,chaîne,caractère,booléen,réel|};",
		"description": "Crée un tableau de dimension 1 (vecteur)."
	},

	"Template de [Tableau 2D]": {
		"scope": "algo",
		"prefix": "tab 2d",
		"body": "${1:Nom}: Tableau [1..${2:fin_ligne}, 1..${3:fin_colonne}] de ${4|entier,chaîne,caractère,booléen,réel|};",
		"description": "Crée un tableau de dimension 2 (matrice)."
	},

	"Template de [constantes]": {
		"scope": "algo",
		"prefix": "constantes",
		"body": [
			"Constantes",
			"\t${1:const} ◄- ${2:valeur};"
		]
	},
	"Template de [algorithme]": {
		"scope": "algo",
		"prefix": "algorithme",
		"body": [
			"Algorithme ${1:nom};",
			"",
			"Début",
			"\t${2:instructions};",
			"Fin."
		]
	},
	"Template de [retourne]": {
		"scope": "algo",
		"prefix": "retourne",
		"body": [
			"retourne ${1:valeur}"
		]
	},
	"Template de [fleche gauche]": {
		"scope": "algo",
		"prefix": "<=",
		"body": [
			"◄-"
		]
	},
	"Template de [fleche droite]": {
		"scope": "algo",
		"prefix": "=>",
		"body": [
			"-►"
		]
	},
	"Template de [différent]": {
		"scope": "algo",
		"prefix": "=/=",
		"body": [
			"≠"
		]
	},
    "Template de [fonction]": {
        "scope": "algo",
        "prefix": "fonction",
        "body": [
            "Fonction ${1:nom}( ${2:arguments} ): ${3|entier,chaîne,caractère,booléen,réel|};",
            "début",
            "\t${4:instructions};",
            "\tretourne ${5:valeur};",
            "fin"
        ]
    },
    "Template de [procédure]": {
        "scope": "algo",
        "prefix": "procédure",
        "body": [
            "Procédure ${1:nom}( ${2:arguments} );",
            "début",
            "\t${4:instructions};",
            "fin"
        ]
    },
	
	"Template de [arrondi()]":{
		"prefix":"arrondi",
		"body":["arrondi(${1:un_réel});"],
		"description":"fonction arrondi()"
	},
	"Template de [Long()]":{
		"prefix":"long",
		"body":["Long(${1:une_chaîne});"],
		"description":"fonction long()"
	},	
	"Template de [Majus('a')='A']":{
		"prefix":"majus",
		"body":["Majus(${1:une_chaîne});"],
		"description":"retourne le majuscule du caractère c"
	},
	"Template de [Asc('A')=65]":{
		"prefix":"asc",
		"body":["Asc(${1:une_chaîne});"],
		"description":"retourne le code ASCII du caractère c"
	},
	"Template de [Car(65)='A']":{
		"prefix":"car",
		"body":["Car(${1:un_entier});"],
		"description":"retourne le caractère dont le code ASCII est égal à i."
	},
	"Template de [Succ('a')='b']":{
		"prefix":"succ",
		"body":["Succ(${1:un_caractère});"],
		"description":"retourne le successeur du caractère c"
	},
	"Template de [Pred('b')='a']":{
		"prefix":"pred",
		"body":["Pred(${1:un_caractère});"],
		"description":"retourne le prédécesseur du caractère c"
	},
	"tri à bulles (v.1)":{
		"prefix": ["x-tri-bul-1"],
		"body": ["procédure ${1:tri_à_bulles}(@${2:T}: ${3:tab_eleves}, ${4:N}:entier)",
			"début",
			"\trépéter",
			"\t\tpos_dernière_permutation <-- 0",
			"\t\tpour i de 1 à ${4:N}-1 faire",
			"\t\t\tsi ${2:T}[i-1] ${5|>,<|} ${2:T}[i] alors",
			"\t\t\t\t${6:kes} <-- ${2:T}[i-1]",
			"\t\t\t\t${2:T}[i-1] <-- ${2:T}[i]",
			"\t\t\t\t${2:T}[i] <-- ${6:kes}",
			"\t\t\t\tpos_dernière_permutation <-- i",
			"\t\t\tfin_si",
			"\t\tfin_pour",
			"\t\t${4:N} <-- pos_dernière_permutation",
			"\tjusqu'à  pos_dernière_permutation ≤ 1",
			"fin"],			
		"description":"(proc) tri à bulles (v.1)"
	},
	"tri à bulles (v.2)":{
		"prefix": ["x-tri-bul-2"],
		"body": ["procédure ${1:tri_à_bulles}(@${2:T}: ${3:tab_eleves}, ${4:N}:entier)",
			"début",
			"\tpour i de ${4:N}-1 à 1 (pas = -1) faire",
			"\t\tpour j de 1 à i faire",
			"\t\t\tsi ${2:T}[j-1] > ${2:T}[j] alors",
			"\t\t\t\t${5:kes} <-- ${2:T}[j-1]",
			"\t\t\t\t${2:T}[j-1] <-- ${2:T}[j]",
			"\t\t\t\t${2:T}[j] <-- ${5:kes}",
			"\t\t\tfin_si",
			"\t\tfin_pour",
			"\tfin_pour",
			"fin"],			
		"description":"(proc) tri à bulles (v.2)"
	},
	"tri par sélection (v.1)":{
		"prefix": ["x-tri-sél-1"],
		"body": ["Procédure ${1:tri_par_sélection}(@${2:T}: ${3:tab_eleves}, ${4:N}:entier)",
			"début",
			"\tpour i de 0 à ${4:N}-2 faire",
			"\t\t// recherche de la position du ${5|min,max|}imum",
			"\t\tpos_${5|min,max|} <-- i",
			"\t\tpour j de i+1 à ${4:N}-1 faire",
			"\t\t\tsi ${2:T}[i] ${6|>,<|} ${2:T}[pos_${5|min,max|}] alors",
			"\t\t\t\tpos_${5|min,max|} <-- i",
			"\t\t\tfin_si ",
			"\t\tfin_pour",
			"\t\t",
			"\t\t// permutation de la case actuelle (numéro i) avec ",
			"\t\t// la case qui contient le ${5|min,max|}imum (numéro pos_${5|min,max|})",
			"\t\tsi i ≠ pos_${5|min,max|} alors",
			"\t\t\t ${7:kes} <-- ${2:T}[i]",
			"\t\t\t${2:T}[i] <-- ${2:T}[pos_${5|min,max|}]",
			"\t\t\t${2:T}[pos_${5|min,max|}] <--  ${7:kes}",
			"\t\tfin_si",
			"\tfin_pour",
			"fin"],			
		"description":"(proc) tri par sélection (v.1)"
	},
	"tri par sélection (v.2)":{
		"prefix": ["x-tri-sél-2"],
		"body": ["Procédure ${1:tri_par_sélection}(@${2:T}: ${3:tab_eleves}, ${4:N}:entier)",
			"début",
			"\tpour i de 0 à ${4:N}-2 faire",
			"\t\tpos_${5|min,max|} <-- chercher_pos_${5|min,max|}(${2:T}, i, ${4:N}-1)",
			"\t\tpermuter(${2:T}[i], ${2:T}[pos_${5|min,max|}])",
			"\tfin_pour\t\t",
			"fin",
			"Fonction chercher_pos_${5|min,max|}(${2:T}: ${3:tab_eleves}, b_ini, b_fin: entier) : entier",
			"début",
			"\tp_${5|min,max|} <-- b_ini",
			"\tpour i de b_ini + 1 à b_fin faire",
			"\t\tsi ${2:T}[i] ${6|<,>|} ${2:T}[p_${5|min,max|}] alors",
			"\t\t\tp_${5|min,max|} <-- i",
			"\t\tfin_si",
			"\tfin_pour",
			"\tretourner p_${5|min,max|}",
			"fin",
			"Procédure permuter(@x: ${8|entier,chaîne,réel  ,booléen,caractère|}, @y:${8|entier,chaîne,réel  ,booléen,caractère|})",
			"début",
			"\tkes <-- x",
			"\tx <-- y",
			"\ty <-- kes",
			"fin"],			
		"description":"(proc) tri par sélection (v.2)"
	},
	"tri par insertion (v.1)":{
		"prefix": ["x-tri-ins-1"],
		"body": ["Procédure ${1:tri_par_insertion}(@${2:T}: ${3:tab_eleves}, ${4:N}:entier)",
			"début",
			"\tpour i de 1 à ${4:N}-1 faire",
			"\t\t// sauvegarder la valeur à insérer",
			"\t\t${5:valeur_à_insérer} <-- ${2:T}[i]",
			"\t\t${6:pos_case_libre} <-- i",
			"\t\t",
			"\t\t// décalage à droite des valeurs, et recherche de la position d'insertion",
			"\t\ttant que ${6:pos_case_libre} > 0 et ${2:T}[${6:pos_case_libre} - 1] ${7|>,<|} ${5:valeur_à_insérer} faire",
			"\t\t\t${2:T}[${6:pos_case_libre}] <-- ${2:T}[${6:pos_case_libre} - 1]",
			"\t\t\t${6:pos_case_libre} <-- ${6:pos_case_libre} - 1",
			"\t\tfin_tant_que",
			"\t\t",
			"\t\t// insertion de \"${5:valeur_à_insérer}\" à la case libre",
			"\t\t${2:T}[${6:pos_case_libre}] <-- ${5:valeur_à_insérer}",
			"\tfin_pour",
			"fin"],			
		"description":"(proc) tri par insertion (v.1)"
	}
}